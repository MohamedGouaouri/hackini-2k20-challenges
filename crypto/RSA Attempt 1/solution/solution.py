import gmpy2

N = 166253830848460102756591308656542128237880784786579221607192843398410922531068625260787120053016633180787267004642503604722578177921193194021721703709402769166285265864784646140395470760800703729207412929261378327101980175341029051045468949415759250259715651999708324002910070022973057868789185357081254743741
e = 65537
c = 79568664955919586043761139654092114989770656979486230855079085329288000493345323224115787659447681360068498191206884922621741035268546450591946672253868759242693009384626775461231118171185359230388299677696128934047316603711378929155546856775396483044015355312064711695841792328282482898702439578688957327927

x = gmpy2.isqrt(N)
p = gmpy2.next_prime(x)
q = N // p

assert p * q == N

phi = (p-1) * (q-1)

d = gmpy2.invert(e, phi)

m = pow(c, d, N)

flag = bytes.fromhex(hex(m)[2:])
print(flag.decode())
